"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.initGlobalStore = exports.createStore = exports.globalMixin = exports.injectStaff = exports.mixinMainProcess = void 0;
var mixin_1 = require("./mixin");
var store_1 = require("./store");
var version_1 = require("./version");
function hackPageBuilder() {
    var nativePage = Page;
    Page = function (options) {
        nativePage(mixinMainProcess(options));
    };
}
function hackComponentBuilder() {
}
function mixinMainProcess(options, type) {
    if (type === void 0) { type = 0; }
    if (!options.data) {
        options.data = {};
    }
    if (!options.__mixin) {
        options.__mixin = {};
    }
    var storeTool = options.__mixin;
    options = mixin_1._mixinGlobal({ options: options, type: type, storeTool: storeTool });
    options = mixin_1.mixinCurrent({ options: options, type: type, storeTool: storeTool });
    store_1.initStoreHacker({ options: options, type: type, storeTool: storeTool });
    return options;
}
exports.mixinMainProcess = mixinMainProcess;
function main() {
    hackPageBuilder();
    hackComponentBuilder();
    if (typeof wx !== 'undefined') {
        injectStaff(wx);
    }
    else if (typeof qq !== 'undefined') {
        injectStaff(qq);
    }
}
main();
function injectStaff(target) {
    target.mixin = mixin_1._globalMixin;
    target.createStore = store_1._createStore;
    target.initGlobalStore = store_1._initGlobalStore;
    target.mpMixinVersion = version_1.default;
}
exports.injectStaff = injectStaff;
exports.globalMixin = mixin_1._globalMixin;
exports.createStore = store_1._createStore;
exports.initGlobalStore = store_1._initGlobalStore;
exports.version = version_1.default;
var mpMixin = {
    globalMixin: exports.globalMixin,
    createStore: exports.createStore,
    initGlobalStore: exports.initGlobalStore,
    version: exports.version,
    injectStaff: injectStaff,
};
exports.default = {
    globalMixin: exports.globalMixin,
    createStore: exports.createStore,
    initGlobalStore: exports.initGlobalStore,
    version: exports.version,
    injectStaff: injectStaff,
    default: mpMixin,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFVQSxpQ0FBaUU7QUFDakUsaUNBQXdFO0FBRXhFLHFDQUFpQztBQVVqQyxTQUFTLGVBQWU7SUFDcEIsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLElBQUksR0FBRyxVQUFVLE9BQW9CO1FBQ2pDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUMsQ0FBQztBQUNOLENBQUM7QUFFRCxTQUFTLG9CQUFvQjtBQUs3QixDQUFDO0FBRUQsU0FBZ0IsZ0JBQWdCLENBQzVCLE9BQXVDLEVBQ3ZDLElBQW9DO0lBQXBDLHFCQUFBLEVBQUEsUUFBb0M7SUFFcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUU7UUFBRSxPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztLQUFFO0lBQ3pDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFO1FBQUUsT0FBTyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7S0FBRTtJQUMvQyxJQUFNLFNBQVMsR0FBVSxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3pDLE9BQU8sR0FBRyxvQkFBWSxDQUFDLEVBQUMsT0FBTyxTQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUUsU0FBUyxXQUFBLEVBQUMsQ0FBQyxDQUFDO0lBRW5ELE9BQU8sR0FBRyxvQkFBWSxDQUFDLEVBQUMsT0FBTyxTQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUUsU0FBUyxXQUFBLEVBQUMsQ0FBQyxDQUFDO0lBRW5ELHVCQUFlLENBQUMsRUFBQyxPQUFPLFNBQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxTQUFTLFdBQUEsRUFBQyxDQUFDLENBQUM7SUFFNUMsT0FBTyxPQUFPLENBQUM7QUFDbkIsQ0FBQztBQWRELDRDQWNDO0FBRUQsU0FBUyxJQUFJO0lBQ1QsZUFBZSxFQUFFLENBQUM7SUFDbEIsb0JBQW9CLEVBQUUsQ0FBQztJQUV2QixJQUFJLE9BQU8sRUFBRSxLQUFLLFdBQVcsRUFBRTtRQUMzQixXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbkI7U0FBTSxJQUFJLE9BQU8sRUFBRSxLQUFLLFdBQVcsRUFBRTtRQUNsQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbkI7QUFDTCxDQUFDO0FBRUQsSUFBSSxFQUFFLENBQUM7QUFFUCxTQUFnQixXQUFXLENBQUUsTUFLNUI7SUFDRyxNQUFNLENBQUMsS0FBSyxHQUFHLG9CQUFZLENBQUM7SUFDNUIsTUFBTSxDQUFDLFdBQVcsR0FBRyxvQkFBWSxDQUFDO0lBQ2xDLE1BQU0sQ0FBQyxlQUFlLEdBQUcsd0JBQWdCLENBQUM7SUFDMUMsTUFBTSxDQUFDLGNBQWMsR0FBRyxpQkFBUSxDQUFDO0FBQ3JDLENBQUM7QUFWRCxrQ0FVQztBQUVZLFFBQUEsV0FBVyxHQUFHLG9CQUFZLENBQUM7QUFDM0IsUUFBQSxXQUFXLEdBQUcsb0JBQVksQ0FBQztBQUMzQixRQUFBLGVBQWUsR0FBRyx3QkFBZ0IsQ0FBQztBQUNuQyxRQUFBLE9BQU8sR0FBRyxpQkFBUSxDQUFDO0FBRWhDLElBQU0sT0FBTyxHQUFHO0lBQ1osV0FBVyxxQkFBQTtJQUNYLFdBQVcscUJBQUE7SUFDWCxlQUFlLHlCQUFBO0lBQ2YsT0FBTyxpQkFBQTtJQUNQLFdBQVcsYUFBQTtDQUNkLENBQUM7QUFFRixrQkFBZTtJQUNYLFdBQVcscUJBQUE7SUFDWCxXQUFXLHFCQUFBO0lBQ1gsZUFBZSx5QkFBQTtJQUNmLE9BQU8saUJBQUE7SUFDUCxXQUFXLGFBQUE7SUFDWCxPQUFPLEVBQUUsT0FBTztDQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjogdGFja2NoZW5cclxuICogQERhdGU6IDIwMjEtMDUtMDEgMTg6Mjc6MDNcclxuICogQExhc3RFZGl0b3JzOiB0aGVhamFja1xyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDIxLTA1LTExIDIyOjQxOjQ1XHJcbiAqIEBGaWxlUGF0aDogXFxtcC1taXhpblxcc3JjXFxpbmRleC50c1xyXG4gKiBARGVzY3JpcHRpb246IENvZGluZyBzb21ldGhpbmdcclxuICovXHJcblxyXG5pbXBvcnQge1RBUkdFVF9UWVBFfSBmcm9tICcuL2NvbnN0YW50JztcclxuaW1wb3J0IHtfZ2xvYmFsTWl4aW4sIG1peGluQ3VycmVudCwgX21peGluR2xvYmFsfSBmcm9tICcuL21peGluJztcclxuaW1wb3J0IHtfY3JlYXRlU3RvcmUsIF9pbml0R2xvYmFsU3RvcmUsIGluaXRTdG9yZUhhY2tlcn0gZnJvbSAnLi9zdG9yZSc7XHJcbmltcG9ydCB7SVBhZ2VPcHRpb24sIElHbG9iYWxNaXhpbkZuLCBJQ3JlYXRlU3RvcmVGbiwgSUluaXRHbG9iYWxTdG9yZUZuLCBJQ29tcG9uZW50T3B0aW9uLCBJSnNvbn0gZnJvbSAnLi90eXBlJztcclxuaW1wb3J0IF92ZXJzaW9uIGZyb20gJy4vdmVyc2lvbic7XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgICBsZXQgUGFnZTogKG9wdGlvbnM6IElQYWdlT3B0aW9uKSA9PiB2b2lkO1xyXG4gICAgbGV0IENvbXBvbmVudDogKG9wdGlvbnM6IElDb21wb25lbnRPcHRpb24pID0+IHZvaWQ7XHJcbiAgICBjb25zdCB3eDogb2JqZWN0O1xyXG4gICAgY29uc3QgcXE6IG9iamVjdDtcclxufVxyXG5cclxuLy8g5rOo5YWl5LiA5Lqb5YWo5bGA5pa55rOVXHJcbmZ1bmN0aW9uIGhhY2tQYWdlQnVpbGRlciAoKSB7XHJcbiAgICBjb25zdCBuYXRpdmVQYWdlID0gUGFnZTtcclxuICAgIFBhZ2UgPSBmdW5jdGlvbiAob3B0aW9uczogSVBhZ2VPcHRpb24pIHtcclxuICAgICAgICBuYXRpdmVQYWdlKG1peGluTWFpblByb2Nlc3Mob3B0aW9ucykpO1xyXG4gICAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFja0NvbXBvbmVudEJ1aWxkZXIgKCkge1xyXG4gICAgLy8gY29uc3QgbmF0aXZlQ29tcG9uZW50ID0gQ29tcG9uZW50O1xyXG4gICAgLy8gQ29tcG9uZW50ID0gZnVuY3Rpb24gKG9wdGlvbnM6IElDb21wb25lbnRPcHRpb24pIHtcclxuICAgIC8vICAgICBuYXRpdmVDb21wb25lbnQobWl4aW5NYWluUHJvY2VzcyhvcHRpb25zLCBUQVJHRVRfVFlQRS5DT01QT05FTlQpKTtcclxuICAgIC8vIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtaXhpbk1haW5Qcm9jZXNzIChcclxuICAgIG9wdGlvbnM6IElQYWdlT3B0aW9uIHwgSUNvbXBvbmVudE9wdGlvbixcclxuICAgIHR5cGU6IFRBUkdFVF9UWVBFID0gVEFSR0VUX1RZUEUuUEFHRVxyXG4pIHtcclxuICAgIGlmICghb3B0aW9ucy5kYXRhKSB7IG9wdGlvbnMuZGF0YSA9IHt9OyB9XHJcbiAgICBpZiAoIW9wdGlvbnMuX19taXhpbikgeyBvcHRpb25zLl9fbWl4aW4gPSB7fTsgfVxyXG4gICAgY29uc3Qgc3RvcmVUb29sOiBJSnNvbiA9IG9wdGlvbnMuX19taXhpbjtcclxuICAgIG9wdGlvbnMgPSBfbWl4aW5HbG9iYWwoe29wdGlvbnMsIHR5cGUsIHN0b3JlVG9vbH0pO1xyXG5cclxuICAgIG9wdGlvbnMgPSBtaXhpbkN1cnJlbnQoe29wdGlvbnMsIHR5cGUsIHN0b3JlVG9vbH0pO1xyXG5cclxuICAgIGluaXRTdG9yZUhhY2tlcih7b3B0aW9ucywgdHlwZSwgc3RvcmVUb29sfSk7XHJcblxyXG4gICAgcmV0dXJuIG9wdGlvbnM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1haW4gKCkge1xyXG4gICAgaGFja1BhZ2VCdWlsZGVyKCk7XHJcbiAgICBoYWNrQ29tcG9uZW50QnVpbGRlcigpO1xyXG4gIFxyXG4gICAgaWYgKHR5cGVvZiB3eCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBpbmplY3RTdGFmZih3eCk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBxcSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICBpbmplY3RTdGFmZihxcSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1haW4oKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbmplY3RTdGFmZiAodGFyZ2V0OiBvYmplY3QgJiB7XHJcbiAgbWl4aW4/OiBJR2xvYmFsTWl4aW5GbjtcclxuICBjcmVhdGVTdG9yZT86IElDcmVhdGVTdG9yZUZuO1xyXG4gIGluaXRHbG9iYWxTdG9yZT86IElJbml0R2xvYmFsU3RvcmVGbjtcclxuICBtcE1peGluVmVyc2lvbj86IHN0cmluZztcclxufSkge1xyXG4gICAgdGFyZ2V0Lm1peGluID0gX2dsb2JhbE1peGluO1xyXG4gICAgdGFyZ2V0LmNyZWF0ZVN0b3JlID0gX2NyZWF0ZVN0b3JlO1xyXG4gICAgdGFyZ2V0LmluaXRHbG9iYWxTdG9yZSA9IF9pbml0R2xvYmFsU3RvcmU7XHJcbiAgICB0YXJnZXQubXBNaXhpblZlcnNpb24gPSBfdmVyc2lvbjtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdsb2JhbE1peGluID0gX2dsb2JhbE1peGluO1xyXG5leHBvcnQgY29uc3QgY3JlYXRlU3RvcmUgPSBfY3JlYXRlU3RvcmU7XHJcbmV4cG9ydCBjb25zdCBpbml0R2xvYmFsU3RvcmUgPSBfaW5pdEdsb2JhbFN0b3JlO1xyXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IF92ZXJzaW9uO1xyXG5cclxuY29uc3QgbXBNaXhpbiA9IHtcclxuICAgIGdsb2JhbE1peGluLFxyXG4gICAgY3JlYXRlU3RvcmUsXHJcbiAgICBpbml0R2xvYmFsU3RvcmUsXHJcbiAgICB2ZXJzaW9uLFxyXG4gICAgaW5qZWN0U3RhZmYsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBnbG9iYWxNaXhpbixcclxuICAgIGNyZWF0ZVN0b3JlLFxyXG4gICAgaW5pdEdsb2JhbFN0b3JlLFxyXG4gICAgdmVyc2lvbixcclxuICAgIGluamVjdFN0YWZmLFxyXG4gICAgZGVmYXVsdDogbXBNaXhpbiwgLy8g5a+55LqO5b6u5L+hdHPnvJbor5HnmoQgZGVmYXVsdCDnmoTlhbzlrrlcclxufTsiXX0=